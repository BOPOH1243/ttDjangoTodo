version: "3.9"

services:
  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  web:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file: 
      - .env
    environment:
      # если нужны какие-то доп. vars
      DJANGO_SETTINGS_MODULE: project.settings
    command:
      - python
      - project/manage.py
      - runserver
      - 0.0.0.0:8000
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - migrate

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /app/project
    restart: always
    env_file:
      - .env
    command:
      - celery
      - -A
      - project
      - worker
      - --loglevel=info
      - --concurrency=4
    depends_on:
      - db
      - redis
      - web
      - bot

  bot:
    build:
      context: .
      dockerfile: bot/Dockerfile
    restart: always
    env_file:
      - .env
    # uvicorn запускается внутри bot/main.py
    command: >
      sh -c "python bot/main.py"
    ports:
      - "8001:8001"
    depends_on:
      - web

  migrate:
    build: .
    env_file: .env
    command:
      - python
      - project/manage.py
      - migrate
    depends_on:
      - db
    restart: "no"
volumes:
  postgres_data:
  redis_data:
